@use "../abstracts" as *; 

/* Classes for Specific Components  */

//Containers
.container {
    --max-width: 1110px;
    --padding: 2rem;

    width: min(100% - var(--padding), var(--max-width));
    margin-inline: auto;
}
 
//Rounded Border Outline
.lightPurple-border {
    @include color-border ($lightPurple, 15px, 30px);
}

.mediumPink-border {
    @include color-border ($mediumPink, 10px, 30px);
}

.mediumPink-border-thin { 
    @include color-border (#e8a4c8, .25rem, 5rem);
}

.white-border {
    @include color-border (white, 15px, 30px);
}

//Button
.button {

    button {
        background-color: $lightPink;
        color: $darkViolet;
        padding: .4rem 2rem;
        font-size: $fs-button;
        font-family: $ff-accent;
        border-radius: 30px;
        border: 7px solid $mediumPink;
        box-shadow: $darkViolet 5px 5px;
        transition: all .3s ease;
        position: relative;

        &:hover {
            background-color: $mediumYellow;
            color: $darkViolet;
            border: 7px solid $lightYellow;
            box-shadow: 0 0;
        }

        a{
            text-decoration: none;
        }

        &:before {
            content: '';
            background-image: $lgSparkles;
            background-size: contain;
            background-repeat: no-repeat;
            rotate: 180deg;
            top: 0;
            bottom: 0;
            left: -.9rem;
            right: auto;
            margin: auto;
            height: 27px;
            width: 28px;
            position: absolute;
            z-index: -1;
            transition: all .5s ease;
            opacity: 0;
        }
        
        &:after {
            content: '';
            background-image: $lgSparkles;
            background-size: contain;
            background-repeat: no-repeat;
            top: 0;
            bottom: 0;
            left: auto;
            right: -.9rem;
            margin: auto;
            height: 27px;
            width: 28px;
            position: absolute;
            z-index: -1;
            transition: all .5s ease;
            opacity: 0;
        }

        &:hover {
            &:before {
                top: -1.75rem;
                z-index: -1;
                opacity: 1;
            }

            &:after {
                top: 1.75rem;
                z-index: -1;
                opacity: 1;
            }
        }
    
    }
    
}

//Gradient Grid Background

.gradientGridBackround {
        position: relative;
        background-size: cover;
        overflow: hidden;
        isolation: isolate;
        background-position: bottom;
        background-image: url("data:image/svg+xml,<svg id='patternId' width='100%' height='100%' opacity='.7' xmlns='http://www.w3.org/2000/svg'><defs><pattern id='a' patternUnits='userSpaceOnUse' width='20' height='20' patternTransform='scale(3) rotate(0)'><rect x='0' y='0' width='100%' height='100%' fill='hsla(0, 0%, 100%, 0)'/><path d='M 10,-2.55e-7 V 20 Z M -1.1677362e-8,10 H 20 Z'  stroke-width='0.5' stroke='hsla(0, 0%, 100%, 1)' fill='none'/></pattern></defs><rect width='800%' height='800%' transform='translate(0,0)' fill='url(%23a)'/></svg>"),
        linear-gradient(45deg, rgba(232,164,200,1) 0%, rgba(175,188,220,1) 100%);
        
}